version: "3.8"
services:
    #instead of dev dns will be using docker's implicit dns resolver by service name (as long as within the same network)
    #https://github.com/ruudud/devdns
    #container to container communication as long as dns is set to dockerdns ip address
    #pattern to reach other containers is {container_name}.docker (ex. dockerdns.docker)
    #dockerdns:
    #    container_name: dockerdns
    #    image: ruudud/devdns
    #    #network_mode: bridge        #use default bridge network instead of implicit docker-compose custom network
    #    environment:
    #        DNS_DOMAIN: "docker"
    #    volumes:
    #        - /var/run/docker.sock:/var/run/docker.sock:ro
    #https://github.com/finboxio/docker-dns
    #wildcard *.docker host addresses points to 127.0.0.1
    #dns_install.bat has commands that add 127.0.0.1 as DNS which will point to localdns
    localdns:
        container_name: localdns
        network_mode: bridge        #use default bridge network instead of implicit docker-compose custom network
        image: finboxio/docker-dns
        restart: always
        ports:
            - "53:53/udp"
    nginx:
        container_name: nginx
        image: nginx:alpine
        #network_mode: bridge        #use default bridge network instead of implicit docker-compose custom network
        restart: always
        volumes:
            - ./nginx/certs:/etc/nginx/certs
            - ./nginx/conf.d:/etc/nginx/conf.d
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf
        ports:
            - "80:80"
            - "443:443"
    demo.docker:               #postfix .docker to resolve in internal network
        container_name: demo
        image: nginxdemos/hello
        restart: always

networks:
    default:
        external:
            name: dockerdev