global
    log stdout  format raw  local0  info

defaults
    timeout connect 10s
    timeout client 30s
    timeout server 30s
    mode http
    maxconn 3000
	log stdout  format raw  local0  info

frontend  front
    bind *:443 v4v6 crt /usr/local/etc/haproxy-certs
	
	#log-format "%ci:%cp [%t] %ft %b/%s %Tw/%Tc/%Tt %B %ts %ac/%fc/%bc/%sc/%rc %sq/%bq ssl_fc_has_sni '%[ssl_fc_has_sni]' sni:'%[capture.req.hdr(0)]' ssl_fc_sni '%[ssl_fc_sni]' ssl_fc_protocol '%[ssl_fc_protocol]' ssl_bc '%[ssl_bc]' ssl_bc_alpn '%[ssl_bc_alpn]' ssl_bc_protocol '%[ssl_bc_protocol]' ssl_c_i_dn '%[ssl_c_i_dn()]' ssl_c_s_dn '%[ssl_c_s_dn()]' ssl_f_i_dn '%[ssl_f_i_dn()]' ssl_f_s_dn '%[ssl_f_s_dn]' ssl_fc_cipher '%[ssl_fc_cipher]' "
	log-format "%ci:%cp [%t] %ft %b/%s %Tw/%Tc/%Tt %B %ts %ac/%fc/%bc/%sc/%rc %sq/%bq dst:%[var(sess.dst)] "
    tcp-request content set-var(sess.dst) ssl_fc_sni
   
    mode tcp
	tcp-request inspect-delay 5s
	
	tcp-request content accept if { req_ssl_hello_type 1 }
	log stdout  format raw  local0  info
	
	#use_backend sql if { ssl_fc_sni -i sql.docker }
	use_backend sql

backend sql
	mode tcp
	server sql-a 172.17.0.2:1433
